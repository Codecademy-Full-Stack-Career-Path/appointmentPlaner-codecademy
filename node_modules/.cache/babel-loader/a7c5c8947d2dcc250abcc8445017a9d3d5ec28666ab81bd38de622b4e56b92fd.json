{"ast":null,"code":"var _jsxFileName = \"/home/user/Documents/codeAcademy/appointment-planner-starting-v18/src/containers/appointmentsPage/AppointmentsPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { AppointmentForm } from \"../../components/appointmentForm/AppointmentForm\";\nimport { TileList } from \"../../components/tileList/TileList\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const AppointmentsPage = _ref => {\n  _s();\n  let {\n    appointments,\n    contacts,\n    addAppointment\n  } = _ref;\n  /*\r\n  Define state variables for \r\n  appointment info\r\n  */\n  const [name, setName] = useState('');\n  const [contact, setContact] = useState('');\n  const [date, setDate] = useState('');\n  const [time, setTime] = useState('');\n  const [duplicateAppointment, setDuplicateAppointment] = useState(false);\n  const handleSubmit = e => {\n    e.preventDefault();\n    /*\r\n    Add contact info and clear data  \r\n    */\n\n    if (!duplicateAppointment) {\n      addAppointment(name, contact, date, time);\n      setName('');\n      setContact('');\n      setDate('');\n      setTime('');\n    } else {\n      alert('Duplicate Appointment');\n      setName('');\n      setContact('');\n      setDate('');\n      setTime('');\n      setDuplicateAppointment(false);\n    }\n  };\n  useEffect(() => {\n    if (appointments.some(appointment => appointment.name === name)) {\n      setDuplicateAppointment(true);\n    }\n  }, [name, appointments]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Add Appointment\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(AppointmentForm, {\n        name: name,\n        setName: setName,\n        contact: contact,\n        setContact: setContact,\n        date: date,\n        setDate: setDate,\n        time: time,\n        setTime: setTime,\n        handleSubmit: handleSubmit\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Appointments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TileList, {\n        appointments: appointments\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 48,\n    columnNumber: 5\n  }, this);\n};\n_s(AppointmentsPage, \"mi0jC6S0bCFKxdI7pOCNcGTE28c=\");\n_c = AppointmentsPage;\nvar _c;\n$RefreshReg$(_c, \"AppointmentsPage\");","map":{"version":3,"names":["React","useState","useEffect","AppointmentForm","TileList","jsxDEV","_jsxDEV","AppointmentsPage","_ref","_s","appointments","contacts","addAppointment","name","setName","contact","setContact","date","setDate","time","setTime","duplicateAppointment","setDuplicateAppointment","handleSubmit","e","preventDefault","alert","some","appointment","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/user/Documents/codeAcademy/appointment-planner-starting-v18/src/containers/appointmentsPage/AppointmentsPage.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\n\r\nimport { AppointmentForm } from \"../../components/appointmentForm/AppointmentForm\";\r\nimport { TileList } from \"../../components/tileList/TileList\";\r\n\r\nexport const AppointmentsPage = ({ appointments, contacts, addAppointment }) => {\r\n  /*\r\n  Define state variables for \r\n  appointment info\r\n  */\r\n  const [name, setName] = useState('');\r\n  const [contact, setContact] = useState('');\r\n  const [date, setDate] = useState('');\r\n  const [time, setTime] = useState('');\r\n\r\n  const [duplicateAppointment, setDuplicateAppointment] = useState(false);\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    /*\r\n    Add contact info and clear data  \r\n    */\r\n\r\n    if (!duplicateAppointment) {\r\n      addAppointment(name, contact, date, time);\r\n      setName('');\r\n      setContact('');\r\n      setDate('');\r\n      setTime('');\r\n    } else {\r\n      alert('Duplicate Appointment');\r\n      setName('');\r\n      setContact('');\r\n      setDate('');\r\n      setTime('');\r\n      setDuplicateAppointment(false);\r\n    }\r\n    \r\n  };\r\n\r\n  useEffect(() => {\r\n      if (appointments.some(appointment => appointment.name === name)) { \r\n        setDuplicateAppointment(true);\r\n      }\r\n    }, [name, appointments]);\r\n\r\n  return (\r\n    <div>\r\n      <section>\r\n        <h2>Add Appointment</h2>\r\n        <AppointmentForm\r\n          name={name}\r\n          setName={setName}\r\n          contact={contact}\r\n          setContact={setContact}\r\n          date={date}\r\n          setDate={setDate}\r\n          time={time}\r\n          setTime={setTime}\r\n          handleSubmit={handleSubmit}\r\n        />\r\n      </section>\r\n      <hr />\r\n      <section>\r\n        <h2>Appointments</h2>\r\n        <TileList appointments={appointments} />\r\n      </section>\r\n    </div>\r\n  );\r\n};"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}